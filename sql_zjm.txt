-- Table: public.oauth
DROP TABLE IF EXISTS oauth CASCADE;

CREATE TABLE public.oauth
(
	"clientId" integer NOT NULL,
    "userId" integer NOT NULL,
    "accessToken" character varying COLLATE pg_catalog."default" NOT NULL,
    "refreshToken" character varying COLLATE pg_catalog."default" NOT NULL,
    "effectiveAccess" integer NOT NULL,
    "effectiveRefresh" integer NOT NULL,
    "ipAddress" character varying COLLATE pg_catalog."default",
    "browser" character varying COLLATE pg_catalog."default",
    "createTime" timestamp(3) without time zone NOT NULL DEFAULT now()
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.oauth
    OWNER to glinp;

-- Table: public.oauth_client
DROP TABLE IF EXISTS oauth_client CASCADE;

CREATE TABLE public.oauth_client
(
    id SERIAL PRIMARY KEY,
    "clientName" character varying COLLATE pg_catalog."default",
    "clientSecret" character varying COLLATE pg_catalog."default",
    "createTime" timestamp(3) without time zone NOT NULL DEFAULT now()
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.oauth_client
    OWNER to glinp;
	
INSERT INTO public.oauth_client("clientName", "clientSecret")
VALUES ('2a894661197e4758bd691b80256a5ffe','ZjA5YzE2NzJhZjI0NGJiZmIyZDIwZDUzMjBhNzUyNTA');
	

-- Table: public.dataexchange
DROP TABLE IF EXISTS dataexchange CASCADE;

CREATE TABLE public.dataexchange
(
    id SERIAL PRIMARY KEY,
    "exchangeCode" character varying COLLATE pg_catalog."default",
    "exchangeName" character varying COLLATE pg_catalog."default",
    company character varying COLLATE pg_catalog."default",
    "appObject" character varying COLLATE pg_catalog."default",
    "dataInstance" character varying COLLATE pg_catalog."default",
    "exchangeMode" character varying COLLATE pg_catalog."default",
    "agingMode" character varying COLLATE pg_catalog."default",
    ftp character varying COLLATE pg_catalog."default",
    "exchangeRate" character varying COLLATE pg_catalog."default",
    "dynamicElement" character varying COLLATE pg_catalog."default",
    "userValue" character varying COLLATE pg_catalog."default",
    "formatData" character varying COLLATE pg_catalog."default",
    url character varying COLLATE pg_catalog."default",
    "createBy" character varying COLLATE pg_catalog."default" NOT NULL,
    "createDate" timestamp(3) without time zone NOT NULL DEFAULT now()
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.dataexchange
    OWNER to glinp;
	
	
-- Table: public.datainstance
DROP TABLE IF EXISTS datainstance CASCADE;

CREATE TABLE public.datainstance
(
    id SERIAL PRIMARY KEY,
    "instanceNumber" character varying COLLATE pg_catalog."default",
    "instanceName" character varying COLLATE pg_catalog."default",
    "conditionNumber" character varying COLLATE pg_catalog."default",
    "conditionName" character varying COLLATE pg_catalog."default",
    "createBy" character varying COLLATE pg_catalog."default" NOT NULL,
    "createDate" timestamp(3) without time zone NOT NULL DEFAULT now()
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.datainstance
    OWNER to glinp;

	
-- Table: public.ftp
DROP TABLE IF EXISTS ftp CASCADE;

CREATE TABLE public.ftp
(
    id SERIAL PRIMARY KEY,
    "ftpCode" character varying COLLATE pg_catalog."default",
    "serviceName" character varying COLLATE pg_catalog."default",
    company character varying COLLATE pg_catalog."default",
    "ftpAddress" character varying COLLATE pg_catalog."default",
    "userName" character varying COLLATE pg_catalog."default",
    "userPwd" character varying COLLATE pg_catalog."default",
    "createBy" character varying COLLATE pg_catalog."default" NOT NULL,
    "createDate" timestamp(3) without time zone NOT NULL DEFAULT now()
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.ftp
    OWNER to glinp;
	
	
-- Table: public.instancedetail
DROP TABLE IF EXISTS instancedetail CASCADE;

CREATE TABLE public.instancedetail
(
    id SERIAL PRIMARY KEY,
    instanceid integer NOT NULL,
    elementid character varying COLLATE pg_catalog."default" NOT NULL
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.instancedetail
    OWNER to glinp;

	
-- Table: public.log
DROP TABLE IF EXISTS log CASCADE;

CREATE TABLE public.log
(
    id SERIAL PRIMARY KEY,
    "user" character varying COLLATE pg_catalog."default" NOT NULL,
    "requestIp" character varying COLLATE pg_catalog."default",
    module character varying COLLATE pg_catalog."default" NOT NULL,
    method character varying COLLATE pg_catalog."default",
    params character varying COLLATE pg_catalog."default",
    "responseTime" character varying COLLATE pg_catalog."default",
    "excTime" character varying COLLATE pg_catalog."default",
    description character varying COLLATE pg_catalog."default",
    result character varying COLLATE pg_catalog."default" NOT NULL,
    "exceptionCode" character varying COLLATE pg_catalog."default",
    "exceptionDetail" character varying COLLATE pg_catalog."default",
    "createBy" character varying COLLATE pg_catalog."default" NOT NULL,
    "createDate" timestamp(3) without time zone NOT NULL DEFAULT now()
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.log
    OWNER to glinp;

-- Table: public.event
DROP TABLE IF EXISTS event CASCADE;

CREATE TABLE public.event
(
    id SERIAL PRIMARY KEY,
    "eventName" character varying COLLATE pg_catalog."default" NOT NULL,
    module character varying COLLATE pg_catalog."default" NOT NULL,
	"subModule" character varying COLLATE pg_catalog."default" NOT NULL,
    target character varying COLLATE pg_catalog."default",
    description character varying COLLATE pg_catalog."default",
    "createBy" character varying COLLATE pg_catalog."default" NOT NULL,
    "createDate" timestamp(3) without time zone NOT NULL DEFAULT now()
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.event
    OWNER to glinp;
